- name: install packages
  apt:
    name:
      - python3-pymysql
    update_cache: true

- name: create ttrss database if not exists
  community.mysql.mysql_db:
    login_host: "{{ lookup('aws_ssm', '/jinwei-me/mysql/host') }}"
    login_port: "{{ lookup('aws_ssm', '/jinwei-me/mysql/port') }}"
    login_user: "{{ lookup('aws_ssm', '/jinwei-me/mysql/username') }}"
    login_password: "{{ lookup('aws_ssm', '/jinwei-me/mysql/password') }}"
    name: "{{ lookup('aws_ssm', '/jinwei-me/mysql/ttrss_db_name') }}"
    state: present

- name: create ttrss database user
  community.mysql.mysql_user:
    login_host: "{{ lookup('aws_ssm', '/jinwei-me/mysql/host') }}"
    login_port: "{{ lookup('aws_ssm', '/jinwei-me/mysql/port') }}"
    login_user: "{{ lookup('aws_ssm', '/jinwei-me/mysql/username') }}"
    login_password: "{{ lookup('aws_ssm', '/jinwei-me/mysql/password') }}"
    name: "{{ lookup('aws_ssm', '/jinwei-me/mysql/ttrss_db_user') }}"
    host: "*"
    password: "{{ lookup('aws_ssm', '/jinwei-me/mysql/ttrss_db_password') }}"
    priv: "{{ lookup('aws_ssm', '/jinwei-me/mysql/ttrss_db_name') }}.*:ALL"
    state: present

- name: create rss_home
  file:
    path: "{{ rss_home }}"
    state: directory

- name: render Dockerfile.rssbot
  template:
    src: Dockerfile.rssbot.j2
    dest: "{{ rss_home }}/Dockerfile.rssbot"
    mode: 0644

- name: render docker-compose
  template:
    src: docker-compose.yaml.j2
    dest: "{{ rss_home }}/docker-compose.yaml"
    mode: 0644

- name: Start rss toolchain using docker-compose
  community.docker.docker_compose:
    project_name: rss
    project_src: "{{ rss_home }}"
  register: output
